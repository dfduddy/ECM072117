'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="Ppress")>  _
Partial Public Class DataClasses1DataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InserttblECMtype(instance As tblECMtype)
    End Sub
  Partial Private Sub UpdatetblECMtype(instance As tblECMtype)
    End Sub
  Partial Private Sub DeletetblECMtype(instance As tblECMtype)
    End Sub
  Partial Private Sub InserttblECMlocation(instance As tblECMlocation)
    End Sub
  Partial Private Sub UpdatetblECMlocation(instance As tblECMlocation)
    End Sub
  Partial Private Sub DeletetblECMlocation(instance As tblECMlocation)
    End Sub
  Partial Private Sub InserttblECMmaid(instance As tblECMmaid)
    End Sub
  Partial Private Sub UpdatetblECMmaid(instance As tblECMmaid)
    End Sub
  Partial Private Sub DeletetblECMmaid(instance As tblECMmaid)
    End Sub
  Partial Private Sub InserttblECMmast(instance As tblECMmast)
    End Sub
  Partial Private Sub UpdatetblECMmast(instance As tblECMmast)
    End Sub
  Partial Private Sub DeletetblECMmast(instance As tblECMmast)
    End Sub
  Partial Private Sub InserttblECMhelpcontact(instance As tblECMhelpcontact)
    End Sub
  Partial Private Sub UpdatetblECMhelpcontact(instance As tblECMhelpcontact)
    End Sub
  Partial Private Sub DeletetblECMhelpcontact(instance As tblECMhelpcontact)
    End Sub
  Partial Private Sub Inserttblecmprcntl3(instance As tblecmprcntl3)
    End Sub
  Partial Private Sub Updatetblecmprcntl3(instance As tblecmprcntl3)
    End Sub
  Partial Private Sub Deletetblecmprcntl3(instance As tblecmprcntl3)
    End Sub
  Partial Private Sub Insertprcntl3_change(instance As prcntl3_change)
    End Sub
  Partial Private Sub Updateprcntl3_change(instance As prcntl3_change)
    End Sub
  Partial Private Sub Deleteprcntl3_change(instance As prcntl3_change)
    End Sub
  Partial Private Sub InserttblECMmamast(instance As tblECMmamast)
    End Sub
  Partial Private Sub UpdatetblECMmamast(instance As tblECMmamast)
    End Sub
  Partial Private Sub DeletetblECMmamast(instance As tblECMmamast)
    End Sub
  Partial Private Sub Insertprcntl2_change(instance As prcntl2_change)
    End Sub
  Partial Private Sub Updateprcntl2_change(instance As prcntl2_change)
    End Sub
  Partial Private Sub Deleteprcntl2_change(instance As prcntl2_change)
    End Sub
  Partial Private Sub InserttblECMprcntl2(instance As tblECMprcntl2)
    End Sub
  Partial Private Sub UpdatetblECMprcntl2(instance As tblECMprcntl2)
    End Sub
  Partial Private Sub DeletetblECMprcntl2(instance As tblECMprcntl2)
    End Sub
  Partial Private Sub InserttblECMecosign(instance As tblECMecosign)
    End Sub
  Partial Private Sub UpdatetblECMecosign(instance As tblECMecosign)
    End Sub
  Partial Private Sub DeletetblECMecosign(instance As tblECMecosign)
    End Sub
  Partial Private Sub InsertECMmast_change(instance As ECMmast_change)
    End Sub
  Partial Private Sub UpdateECMmast_change(instance As ECMmast_change)
    End Sub
  Partial Private Sub DeleteECMmast_change(instance As ECMmast_change)
    End Sub
  Partial Private Sub InserttblECMPrinter_Setting(instance As tblECMPrinter_Setting)
    End Sub
  Partial Private Sub UpdatetblECMPrinter_Setting(instance As tblECMPrinter_Setting)
    End Sub
  Partial Private Sub DeletetblECMPrinter_Setting(instance As tblECMPrinter_Setting)
    End Sub
  Partial Private Sub InserttblecmCustConf(instance As tblecmCustConf)
    End Sub
  Partial Private Sub UpdatetblecmCustConf(instance As tblecmCustConf)
    End Sub
  Partial Private Sub DeletetblecmCustConf(instance As tblecmCustConf)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.Ppress.My.MySettings.Default.PPressConnetion, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property tblECMtypes() As System.Data.Linq.Table(Of tblECMtype)
		Get
			Return Me.GetTable(Of tblECMtype)
		End Get
	End Property
	
	Public ReadOnly Property tblECMlocations() As System.Data.Linq.Table(Of tblECMlocation)
		Get
			Return Me.GetTable(Of tblECMlocation)
		End Get
	End Property
	
	Public ReadOnly Property tblECMmaids() As System.Data.Linq.Table(Of tblECMmaid)
		Get
			Return Me.GetTable(Of tblECMmaid)
		End Get
	End Property
	
	Public ReadOnly Property tblECMcustomers() As System.Data.Linq.Table(Of tblECMcustomer)
		Get
			Return Me.GetTable(Of tblECMcustomer)
		End Get
	End Property
	
	Public ReadOnly Property tblECMmasts() As System.Data.Linq.Table(Of tblECMmast)
		Get
			Return Me.GetTable(Of tblECMmast)
		End Get
	End Property
	
	Public ReadOnly Property tblECMAuthorities() As System.Data.Linq.Table(Of tblECMAuthority)
		Get
			Return Me.GetTable(Of tblECMAuthority)
		End Get
	End Property
	
	Public ReadOnly Property tblECMhelpcontacts() As System.Data.Linq.Table(Of tblECMhelpcontact)
		Get
			Return Me.GetTable(Of tblECMhelpcontact)
		End Get
	End Property
	
	Public ReadOnly Property tblecmprcntl3s() As System.Data.Linq.Table(Of tblecmprcntl3)
		Get
			Return Me.GetTable(Of tblecmprcntl3)
		End Get
	End Property
	
	Public ReadOnly Property prcntl3_changes() As System.Data.Linq.Table(Of prcntl3_change)
		Get
			Return Me.GetTable(Of prcntl3_change)
		End Get
	End Property
	
	Public ReadOnly Property tblECMmamasts() As System.Data.Linq.Table(Of tblECMmamast)
		Get
			Return Me.GetTable(Of tblECMmamast)
		End Get
	End Property
	
	Public ReadOnly Property prcntl2_changes() As System.Data.Linq.Table(Of prcntl2_change)
		Get
			Return Me.GetTable(Of prcntl2_change)
		End Get
	End Property
	
	Public ReadOnly Property tblECMprcntl2s() As System.Data.Linq.Table(Of tblECMprcntl2)
		Get
			Return Me.GetTable(Of tblECMprcntl2)
		End Get
	End Property
	
	Public ReadOnly Property tblECMecosigns() As System.Data.Linq.Table(Of tblECMecosign)
		Get
			Return Me.GetTable(Of tblECMecosign)
		End Get
	End Property
	
	Public ReadOnly Property ECMmast_changes() As System.Data.Linq.Table(Of ECMmast_change)
		Get
			Return Me.GetTable(Of ECMmast_change)
		End Get
	End Property
	
	Public ReadOnly Property tblECMPrinter_Settings() As System.Data.Linq.Table(Of tblECMPrinter_Setting)
		Get
			Return Me.GetTable(Of tblECMPrinter_Setting)
		End Get
	End Property
	
	Public ReadOnly Property tblecmCustConfs() As System.Data.Linq.Table(Of tblecmCustConf)
		Get
			Return Me.GetTable(Of tblecmCustConf)
		End Get
	End Property
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.sp_rebuild_iseries_cust")>  _
	Public Function sp_rebuild_iseries_cust() As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.sp_drop_mast_change")>  _
	Public Function sp_drop_mast_change(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="NVarChar(10)")> ByVal p1 As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), p1)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.sp_create_mast_change")>  _
	Public Function sp_create_mast_change(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="NVarChar(10)")> ByVal p1 As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), p1)
		Return CType(result.ReturnValue,Integer)
	End Function
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblECMtype")>  _
Partial Public Class tblECMtype
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Type As String
	
	Private _Desc As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTypeChanging(value As String)
    End Sub
    Partial Private Sub OnTypeChanged()
    End Sub
    Partial Private Sub OnDescChanging(value As String)
    End Sub
    Partial Private Sub OnDescChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Type", DbType:="NChar(2) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Type() As String
		Get
			Return Me._Type
		End Get
		Set
			If (String.Equals(Me._Type, value) = false) Then
				Me.OnTypeChanging(value)
				Me.SendPropertyChanging
				Me._Type = value
				Me.SendPropertyChanged("Type")
				Me.OnTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Desc]", Storage:="_Desc", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Desc() As String
		Get
			Return Me._Desc
		End Get
		Set
			If (String.Equals(Me._Desc, value) = false) Then
				Me.OnDescChanging(value)
				Me.SendPropertyChanging
				Me._Desc = value
				Me.SendPropertyChanged("Desc")
				Me.OnDescChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblECMlocation")>  _
Partial Public Class tblECMlocation
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Location As String
	
	Private _Description As String
	
	Private _Country As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLocationChanging(value As String)
    End Sub
    Partial Private Sub OnLocationChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnCountryChanging(value As String)
    End Sub
    Partial Private Sub OnCountryChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Location", DbType:="NChar(4) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Location() As String
		Get
			Return Me._Location
		End Get
		Set
			If (String.Equals(Me._Location, value) = false) Then
				Me.OnLocationChanging(value)
				Me.SendPropertyChanging
				Me._Location = value
				Me.SendPropertyChanged("Location")
				Me.OnLocationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NVarChar(50)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Country", DbType:="NChar(2)")>  _
	Public Property Country() As String
		Get
			Return Me._Country
		End Get
		Set
			If (String.Equals(Me._Country, value) = false) Then
				Me.OnCountryChanging(value)
				Me.SendPropertyChanging
				Me._Country = value
				Me.SendPropertyChanged("Country")
				Me.OnCountryChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblECMmaid")>  _
Partial Public Class tblECMmaid
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As String
	
	Private _name As String
	
	Private _Pcopy As Short
	
	Private _ECMflag As Boolean
	
	Private _Chgdate As System.Nullable(Of Date)
	
	Private _User As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As String)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnnameChanging(value As String)
    End Sub
    Partial Private Sub OnnameChanged()
    End Sub
    Partial Private Sub OnPcopyChanging(value As Short)
    End Sub
    Partial Private Sub OnPcopyChanged()
    End Sub
    Partial Private Sub OnECMflagChanging(value As Boolean)
    End Sub
    Partial Private Sub OnECMflagChanged()
    End Sub
    Partial Private Sub OnChgdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnChgdateChanged()
    End Sub
    Partial Private Sub OnUserChanging(value As String)
    End Sub
    Partial Private Sub OnUserChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property ID() As String
		Get
			Return Me._ID
		End Get
		Set
			If (String.Equals(Me._ID, value) = false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_name", DbType:="NVarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property name() As String
		Get
			Return Me._name
		End Get
		Set
			If (String.Equals(Me._name, value) = false) Then
				Me.OnnameChanging(value)
				Me.SendPropertyChanging
				Me._name = value
				Me.SendPropertyChanged("name")
				Me.OnnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pcopy", DbType:="SmallInt NOT NULL")>  _
	Public Property Pcopy() As Short
		Get
			Return Me._Pcopy
		End Get
		Set
			If ((Me._Pcopy = value)  _
						= false) Then
				Me.OnPcopyChanging(value)
				Me.SendPropertyChanging
				Me._Pcopy = value
				Me.SendPropertyChanged("Pcopy")
				Me.OnPcopyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ECMflag", DbType:="Bit NOT NULL")>  _
	Public Property ECMflag() As Boolean
		Get
			Return Me._ECMflag
		End Get
		Set
			If ((Me._ECMflag = value)  _
						= false) Then
				Me.OnECMflagChanging(value)
				Me.SendPropertyChanging
				Me._ECMflag = value
				Me.SendPropertyChanged("ECMflag")
				Me.OnECMflagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Chgdate", DbType:="DateTime")>  _
	Public Property Chgdate() As System.Nullable(Of Date)
		Get
			Return Me._Chgdate
		End Get
		Set
			If (Me._Chgdate.Equals(value) = false) Then
				Me.OnChgdateChanging(value)
				Me.SendPropertyChanging
				Me._Chgdate = value
				Me.SendPropertyChanged("Chgdate")
				Me.OnChgdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[User]", Storage:="_User", DbType:="NChar(10)")>  _
	Public Property User() As String
		Get
			Return Me._User
		End Get
		Set
			If (String.Equals(Me._User, value) = false) Then
				Me.OnUserChanging(value)
				Me.SendPropertyChanging
				Me._User = value
				Me.SendPropertyChanged("User")
				Me.OnUserChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblECMcustomer")>  _
Partial Public Class tblECMcustomer
	
	Private _Location As String
	
	Private _CustID As String
	
	Private _Name As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Location", DbType:="NChar(4) NOT NULL", CanBeNull:=false)>  _
	Public Property Location() As String
		Get
			Return Me._Location
		End Get
		Set
			If (String.Equals(Me._Location, value) = false) Then
				Me._Location = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustID", DbType:="NChar(7) NOT NULL", CanBeNull:=false)>  _
	Public Property CustID() As String
		Get
			Return Me._CustID
		End Get
		Set
			If (String.Equals(Me._CustID, value) = false) Then
				Me._CustID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblECMmast")>  _
Partial Public Class tblECMmast
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Recid As Decimal
	
	Private _Type As String
	
	Private _Location As String
	
	Private _Customer As String
	
	Private _MA As String
	
	Private _Recipent As String
	
	Private _Chgdate As System.Nullable(Of Date)
	
	Private _User As String
	
	Private _Trader As String
	
	Private _Pflag As System.Nullable(Of Char)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRecidChanging(value As Decimal)
    End Sub
    Partial Private Sub OnRecidChanged()
    End Sub
    Partial Private Sub OnTypeChanging(value As String)
    End Sub
    Partial Private Sub OnTypeChanged()
    End Sub
    Partial Private Sub OnLocationChanging(value As String)
    End Sub
    Partial Private Sub OnLocationChanged()
    End Sub
    Partial Private Sub OnCustomerChanging(value As String)
    End Sub
    Partial Private Sub OnCustomerChanged()
    End Sub
    Partial Private Sub OnMAChanging(value As String)
    End Sub
    Partial Private Sub OnMAChanged()
    End Sub
    Partial Private Sub OnRecipentChanging(value As String)
    End Sub
    Partial Private Sub OnRecipentChanged()
    End Sub
    Partial Private Sub OnChgdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnChgdateChanged()
    End Sub
    Partial Private Sub OnUserChanging(value As String)
    End Sub
    Partial Private Sub OnUserChanged()
    End Sub
    Partial Private Sub OnTraderChanging(value As String)
    End Sub
    Partial Private Sub OnTraderChanged()
    End Sub
    Partial Private Sub OnPflagChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnPflagChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Recid", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Recid() As Decimal
		Get
			Return Me._Recid
		End Get
		Set
			If ((Me._Recid = value)  _
						= false) Then
				Me.OnRecidChanging(value)
				Me.SendPropertyChanging
				Me._Recid = value
				Me.SendPropertyChanged("Recid")
				Me.OnRecidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Type", DbType:="NChar(2) NOT NULL", CanBeNull:=false)>  _
	Public Property Type() As String
		Get
			Return Me._Type
		End Get
		Set
			If (String.Equals(Me._Type, value) = false) Then
				Me.OnTypeChanging(value)
				Me.SendPropertyChanging
				Me._Type = value
				Me.SendPropertyChanged("Type")
				Me.OnTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Location", DbType:="NChar(4) NOT NULL", CanBeNull:=false)>  _
	Public Property Location() As String
		Get
			Return Me._Location
		End Get
		Set
			If (String.Equals(Me._Location, value) = false) Then
				Me.OnLocationChanging(value)
				Me.SendPropertyChanging
				Me._Location = value
				Me.SendPropertyChanged("Location")
				Me.OnLocationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Customer", DbType:="NChar(7) NOT NULL", CanBeNull:=false)>  _
	Public Property Customer() As String
		Get
			Return Me._Customer
		End Get
		Set
			If (String.Equals(Me._Customer, value) = false) Then
				Me.OnCustomerChanging(value)
				Me.SendPropertyChanging
				Me._Customer = value
				Me.SendPropertyChanged("Customer")
				Me.OnCustomerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MA", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property MA() As String
		Get
			Return Me._MA
		End Get
		Set
			If (String.Equals(Me._MA, value) = false) Then
				Me.OnMAChanging(value)
				Me.SendPropertyChanging
				Me._MA = value
				Me.SendPropertyChanged("MA")
				Me.OnMAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Recipent", DbType:="NVarChar(128) NOT NULL", CanBeNull:=false)>  _
	Public Property Recipent() As String
		Get
			Return Me._Recipent
		End Get
		Set
			If (String.Equals(Me._Recipent, value) = false) Then
				Me.OnRecipentChanging(value)
				Me.SendPropertyChanging
				Me._Recipent = value
				Me.SendPropertyChanged("Recipent")
				Me.OnRecipentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Chgdate", DbType:="DateTime")>  _
	Public Property Chgdate() As System.Nullable(Of Date)
		Get
			Return Me._Chgdate
		End Get
		Set
			If (Me._Chgdate.Equals(value) = false) Then
				Me.OnChgdateChanging(value)
				Me.SendPropertyChanging
				Me._Chgdate = value
				Me.SendPropertyChanged("Chgdate")
				Me.OnChgdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[User]", Storage:="_User", DbType:="NChar(10)")>  _
	Public Property User() As String
		Get
			Return Me._User
		End Get
		Set
			If (String.Equals(Me._User, value) = false) Then
				Me.OnUserChanging(value)
				Me.SendPropertyChanging
				Me._User = value
				Me.SendPropertyChanged("User")
				Me.OnUserChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Trader", DbType:="NVarChar(30)")>  _
	Public Property Trader() As String
		Get
			Return Me._Trader
		End Get
		Set
			If (String.Equals(Me._Trader, value) = false) Then
				Me.OnTraderChanging(value)
				Me.SendPropertyChanging
				Me._Trader = value
				Me.SendPropertyChanged("Trader")
				Me.OnTraderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pflag", DbType:="NChar(1)")>  _
	Public Property Pflag() As System.Nullable(Of Char)
		Get
			Return Me._Pflag
		End Get
		Set
			If (Me._Pflag.Equals(value) = false) Then
				Me.OnPflagChanging(value)
				Me.SendPropertyChanging
				Me._Pflag = value
				Me.SendPropertyChanged("Pflag")
				Me.OnPflagChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblECMAuthority")>  _
Partial Public Class tblECMAuthority
	
	Private _Recid As Decimal
	
	Private _Userid As String
	
	Private _Authority As Byte
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Recid", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Recid() As Decimal
		Get
			Return Me._Recid
		End Get
		Set
			If ((Me._Recid = value)  _
						= false) Then
				Me._Recid = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Userid", DbType:="NChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property Userid() As String
		Get
			Return Me._Userid
		End Get
		Set
			If (String.Equals(Me._Userid, value) = false) Then
				Me._Userid = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Authority", DbType:="TinyInt NOT NULL")>  _
	Public Property Authority() As Byte
		Get
			Return Me._Authority
		End Get
		Set
			If ((Me._Authority = value)  _
						= false) Then
				Me._Authority = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblECMhelpcontact")>  _
Partial Public Class tblECMhelpcontact
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Recid As Decimal
	
	Private _Appid As String
	
	Private _Contact As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRecidChanging(value As Decimal)
    End Sub
    Partial Private Sub OnRecidChanged()
    End Sub
    Partial Private Sub OnAppidChanging(value As String)
    End Sub
    Partial Private Sub OnAppidChanged()
    End Sub
    Partial Private Sub OnContactChanging(value As String)
    End Sub
    Partial Private Sub OnContactChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Recid", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Recid() As Decimal
		Get
			Return Me._Recid
		End Get
		Set
			If ((Me._Recid = value)  _
						= false) Then
				Me.OnRecidChanging(value)
				Me.SendPropertyChanging
				Me._Recid = value
				Me.SendPropertyChanged("Recid")
				Me.OnRecidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Appid", DbType:="NVarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property Appid() As String
		Get
			Return Me._Appid
		End Get
		Set
			If (String.Equals(Me._Appid, value) = false) Then
				Me.OnAppidChanging(value)
				Me.SendPropertyChanging
				Me._Appid = value
				Me.SendPropertyChanged("Appid")
				Me.OnAppidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Contact", DbType:="NVarChar(50)")>  _
	Public Property Contact() As String
		Get
			Return Me._Contact
		End Get
		Set
			If (String.Equals(Me._Contact, value) = false) Then
				Me.OnContactChanging(value)
				Me.SendPropertyChanging
				Me._Contact = value
				Me.SendPropertyChanged("Contact")
				Me.OnContactChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblecmprcntl3")>  _
Partial Public Class tblecmprcntl3
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Recid As Decimal
	
	Private _Refid As String
	
	Private _Loc As String
	
	Private _Zipcode As String
	
	Private _Formid As String
	
	Private _PrinterID As String
	
	Private _Desc As String
	
	Private _Chgdate As System.Nullable(Of Date)
	
	Private _User As String
	
	Private _Pcopy As System.Nullable(Of Short)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRecidChanging(value As Decimal)
    End Sub
    Partial Private Sub OnRecidChanged()
    End Sub
    Partial Private Sub OnRefidChanging(value As String)
    End Sub
    Partial Private Sub OnRefidChanged()
    End Sub
    Partial Private Sub OnLocChanging(value As String)
    End Sub
    Partial Private Sub OnLocChanged()
    End Sub
    Partial Private Sub OnZipcodeChanging(value As String)
    End Sub
    Partial Private Sub OnZipcodeChanged()
    End Sub
    Partial Private Sub OnFormidChanging(value As String)
    End Sub
    Partial Private Sub OnFormidChanged()
    End Sub
    Partial Private Sub OnPrinterIDChanging(value As String)
    End Sub
    Partial Private Sub OnPrinterIDChanged()
    End Sub
    Partial Private Sub OnDescChanging(value As String)
    End Sub
    Partial Private Sub OnDescChanged()
    End Sub
    Partial Private Sub OnChgdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnChgdateChanged()
    End Sub
    Partial Private Sub OnUserChanging(value As String)
    End Sub
    Partial Private Sub OnUserChanged()
    End Sub
    Partial Private Sub OnPcopyChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnPcopyChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Recid", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Recid() As Decimal
		Get
			Return Me._Recid
		End Get
		Set
			If ((Me._Recid = value)  _
						= false) Then
				Me.OnRecidChanging(value)
				Me.SendPropertyChanging
				Me._Recid = value
				Me.SendPropertyChanged("Recid")
				Me.OnRecidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Refid", DbType:="NChar(30)")>  _
	Public Property Refid() As String
		Get
			Return Me._Refid
		End Get
		Set
			If (String.Equals(Me._Refid, value) = false) Then
				Me.OnRefidChanging(value)
				Me.SendPropertyChanging
				Me._Refid = value
				Me.SendPropertyChanged("Refid")
				Me.OnRefidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Loc", DbType:="NChar(4)")>  _
	Public Property Loc() As String
		Get
			Return Me._Loc
		End Get
		Set
			If (String.Equals(Me._Loc, value) = false) Then
				Me.OnLocChanging(value)
				Me.SendPropertyChanging
				Me._Loc = value
				Me.SendPropertyChanged("Loc")
				Me.OnLocChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Zipcode", DbType:="NChar(10)")>  _
	Public Property Zipcode() As String
		Get
			Return Me._Zipcode
		End Get
		Set
			If (String.Equals(Me._Zipcode, value) = false) Then
				Me.OnZipcodeChanging(value)
				Me.SendPropertyChanging
				Me._Zipcode = value
				Me.SendPropertyChanged("Zipcode")
				Me.OnZipcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Formid", DbType:="NChar(10)")>  _
	Public Property Formid() As String
		Get
			Return Me._Formid
		End Get
		Set
			If (String.Equals(Me._Formid, value) = false) Then
				Me.OnFormidChanging(value)
				Me.SendPropertyChanging
				Me._Formid = value
				Me.SendPropertyChanged("Formid")
				Me.OnFormidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrinterID", DbType:="NVarChar(30)")>  _
	Public Property PrinterID() As String
		Get
			Return Me._PrinterID
		End Get
		Set
			If (String.Equals(Me._PrinterID, value) = false) Then
				Me.OnPrinterIDChanging(value)
				Me.SendPropertyChanging
				Me._PrinterID = value
				Me.SendPropertyChanged("PrinterID")
				Me.OnPrinterIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Desc]", Storage:="_Desc", DbType:="NVarChar(50)")>  _
	Public Property Desc() As String
		Get
			Return Me._Desc
		End Get
		Set
			If (String.Equals(Me._Desc, value) = false) Then
				Me.OnDescChanging(value)
				Me.SendPropertyChanging
				Me._Desc = value
				Me.SendPropertyChanged("Desc")
				Me.OnDescChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Chgdate", DbType:="DateTime")>  _
	Public Property Chgdate() As System.Nullable(Of Date)
		Get
			Return Me._Chgdate
		End Get
		Set
			If (Me._Chgdate.Equals(value) = false) Then
				Me.OnChgdateChanging(value)
				Me.SendPropertyChanging
				Me._Chgdate = value
				Me.SendPropertyChanged("Chgdate")
				Me.OnChgdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[User]", Storage:="_User", DbType:="NChar(10)")>  _
	Public Property User() As String
		Get
			Return Me._User
		End Get
		Set
			If (String.Equals(Me._User, value) = false) Then
				Me.OnUserChanging(value)
				Me.SendPropertyChanging
				Me._User = value
				Me.SendPropertyChanged("User")
				Me.OnUserChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pcopy", DbType:="SmallInt")>  _
	Public Property Pcopy() As System.Nullable(Of Short)
		Get
			Return Me._Pcopy
		End Get
		Set
			If (Me._Pcopy.Equals(value) = false) Then
				Me.OnPcopyChanging(value)
				Me.SendPropertyChanging
				Me._Pcopy = value
				Me.SendPropertyChanged("Pcopy")
				Me.OnPcopyChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.prcntl3_change")>  _
Partial Public Class prcntl3_change
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Recid As Decimal
	
	Private _Refid As String
	
	Private _Loc As String
	
	Private _Zipcode As String
	
	Private _Formid As String
	
	Private _PrinterID As String
	
	Private _Desc As String
	
	Private _Chgdate As System.Nullable(Of Date)
	
	Private _User As String
	
	Private _Pcopy As System.Nullable(Of Short)
	
	Private _Orecid As System.Nullable(Of Decimal)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRecidChanging(value As Decimal)
    End Sub
    Partial Private Sub OnRecidChanged()
    End Sub
    Partial Private Sub OnRefidChanging(value As String)
    End Sub
    Partial Private Sub OnRefidChanged()
    End Sub
    Partial Private Sub OnLocChanging(value As String)
    End Sub
    Partial Private Sub OnLocChanged()
    End Sub
    Partial Private Sub OnZipcodeChanging(value As String)
    End Sub
    Partial Private Sub OnZipcodeChanged()
    End Sub
    Partial Private Sub OnFormidChanging(value As String)
    End Sub
    Partial Private Sub OnFormidChanged()
    End Sub
    Partial Private Sub OnPrinterIDChanging(value As String)
    End Sub
    Partial Private Sub OnPrinterIDChanged()
    End Sub
    Partial Private Sub OnDescChanging(value As String)
    End Sub
    Partial Private Sub OnDescChanged()
    End Sub
    Partial Private Sub OnChgdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnChgdateChanged()
    End Sub
    Partial Private Sub OnUserChanging(value As String)
    End Sub
    Partial Private Sub OnUserChanged()
    End Sub
    Partial Private Sub OnPcopyChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnPcopyChanged()
    End Sub
    Partial Private Sub OnOrecidChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnOrecidChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Recid", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Recid() As Decimal
		Get
			Return Me._Recid
		End Get
		Set
			If ((Me._Recid = value)  _
						= false) Then
				Me.OnRecidChanging(value)
				Me.SendPropertyChanging
				Me._Recid = value
				Me.SendPropertyChanged("Recid")
				Me.OnRecidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Refid", DbType:="NChar(30)")>  _
	Public Property Refid() As String
		Get
			Return Me._Refid
		End Get
		Set
			If (String.Equals(Me._Refid, value) = false) Then
				Me.OnRefidChanging(value)
				Me.SendPropertyChanging
				Me._Refid = value
				Me.SendPropertyChanged("Refid")
				Me.OnRefidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Loc", DbType:="NChar(4)")>  _
	Public Property Loc() As String
		Get
			Return Me._Loc
		End Get
		Set
			If (String.Equals(Me._Loc, value) = false) Then
				Me.OnLocChanging(value)
				Me.SendPropertyChanging
				Me._Loc = value
				Me.SendPropertyChanged("Loc")
				Me.OnLocChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Zipcode", DbType:="NChar(10)")>  _
	Public Property Zipcode() As String
		Get
			Return Me._Zipcode
		End Get
		Set
			If (String.Equals(Me._Zipcode, value) = false) Then
				Me.OnZipcodeChanging(value)
				Me.SendPropertyChanging
				Me._Zipcode = value
				Me.SendPropertyChanged("Zipcode")
				Me.OnZipcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Formid", DbType:="NChar(10)")>  _
	Public Property Formid() As String
		Get
			Return Me._Formid
		End Get
		Set
			If (String.Equals(Me._Formid, value) = false) Then
				Me.OnFormidChanging(value)
				Me.SendPropertyChanging
				Me._Formid = value
				Me.SendPropertyChanged("Formid")
				Me.OnFormidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrinterID", DbType:="NVarChar(30)")>  _
	Public Property PrinterID() As String
		Get
			Return Me._PrinterID
		End Get
		Set
			If (String.Equals(Me._PrinterID, value) = false) Then
				Me.OnPrinterIDChanging(value)
				Me.SendPropertyChanging
				Me._PrinterID = value
				Me.SendPropertyChanged("PrinterID")
				Me.OnPrinterIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Desc]", Storage:="_Desc", DbType:="NVarChar(50)")>  _
	Public Property Desc() As String
		Get
			Return Me._Desc
		End Get
		Set
			If (String.Equals(Me._Desc, value) = false) Then
				Me.OnDescChanging(value)
				Me.SendPropertyChanging
				Me._Desc = value
				Me.SendPropertyChanged("Desc")
				Me.OnDescChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Chgdate", DbType:="DateTime")>  _
	Public Property Chgdate() As System.Nullable(Of Date)
		Get
			Return Me._Chgdate
		End Get
		Set
			If (Me._Chgdate.Equals(value) = false) Then
				Me.OnChgdateChanging(value)
				Me.SendPropertyChanging
				Me._Chgdate = value
				Me.SendPropertyChanged("Chgdate")
				Me.OnChgdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[User]", Storage:="_User", DbType:="NChar(10)")>  _
	Public Property User() As String
		Get
			Return Me._User
		End Get
		Set
			If (String.Equals(Me._User, value) = false) Then
				Me.OnUserChanging(value)
				Me.SendPropertyChanging
				Me._User = value
				Me.SendPropertyChanged("User")
				Me.OnUserChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pcopy", DbType:="SmallInt")>  _
	Public Property Pcopy() As System.Nullable(Of Short)
		Get
			Return Me._Pcopy
		End Get
		Set
			If (Me._Pcopy.Equals(value) = false) Then
				Me.OnPcopyChanging(value)
				Me.SendPropertyChanging
				Me._Pcopy = value
				Me.SendPropertyChanged("Pcopy")
				Me.OnPcopyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Orecid", DbType:="Decimal(18,0)")>  _
	Public Property Orecid() As System.Nullable(Of Decimal)
		Get
			Return Me._Orecid
		End Get
		Set
			If (Me._Orecid.Equals(value) = false) Then
				Me.OnOrecidChanging(value)
				Me.SendPropertyChanging
				Me._Orecid = value
				Me.SendPropertyChanged("Orecid")
				Me.OnOrecidChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblECMmamast")>  _
Partial Public Class tblECMmamast
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _MA As String
	
	Private _Name As String
	
	Private _Pcopy As Short
	
	Private _Chgdate As Date
	
	Private _User As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMAChanging(value As String)
    End Sub
    Partial Private Sub OnMAChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnPcopyChanging(value As Short)
    End Sub
    Partial Private Sub OnPcopyChanged()
    End Sub
    Partial Private Sub OnChgdateChanging(value As Date)
    End Sub
    Partial Private Sub OnChgdateChanged()
    End Sub
    Partial Private Sub OnUserChanging(value As String)
    End Sub
    Partial Private Sub OnUserChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MA", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property MA() As String
		Get
			Return Me._MA
		End Get
		Set
			If (String.Equals(Me._MA, value) = false) Then
				Me.OnMAChanging(value)
				Me.SendPropertyChanging
				Me._MA = value
				Me.SendPropertyChanged("MA")
				Me.OnMAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pcopy", DbType:="SmallInt NOT NULL")>  _
	Public Property Pcopy() As Short
		Get
			Return Me._Pcopy
		End Get
		Set
			If ((Me._Pcopy = value)  _
						= false) Then
				Me.OnPcopyChanging(value)
				Me.SendPropertyChanging
				Me._Pcopy = value
				Me.SendPropertyChanged("Pcopy")
				Me.OnPcopyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Chgdate", DbType:="DateTime NOT NULL")>  _
	Public Property Chgdate() As Date
		Get
			Return Me._Chgdate
		End Get
		Set
			If ((Me._Chgdate = value)  _
						= false) Then
				Me.OnChgdateChanging(value)
				Me.SendPropertyChanging
				Me._Chgdate = value
				Me.SendPropertyChanged("Chgdate")
				Me.OnChgdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[User]", Storage:="_User", DbType:="NChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property User() As String
		Get
			Return Me._User
		End Get
		Set
			If (String.Equals(Me._User, value) = false) Then
				Me.OnUserChanging(value)
				Me.SendPropertyChanging
				Me._User = value
				Me.SendPropertyChanged("User")
				Me.OnUserChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.prcntl2_change")>  _
Partial Public Class prcntl2_change
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Recid As Decimal
	
	Private _MAid As String
	
	Private _Zipcode As String
	
	Private _PrinterID As String
	
	Private _Desc As String
	
	Private _Chgdate As System.Nullable(Of Date)
	
	Private _User As String
	
	Private _Orecid As Decimal
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRecidChanging(value As Decimal)
    End Sub
    Partial Private Sub OnRecidChanged()
    End Sub
    Partial Private Sub OnMAidChanging(value As String)
    End Sub
    Partial Private Sub OnMAidChanged()
    End Sub
    Partial Private Sub OnZipcodeChanging(value As String)
    End Sub
    Partial Private Sub OnZipcodeChanged()
    End Sub
    Partial Private Sub OnPrinterIDChanging(value As String)
    End Sub
    Partial Private Sub OnPrinterIDChanged()
    End Sub
    Partial Private Sub OnDescChanging(value As String)
    End Sub
    Partial Private Sub OnDescChanged()
    End Sub
    Partial Private Sub OnChgdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnChgdateChanged()
    End Sub
    Partial Private Sub OnUserChanging(value As String)
    End Sub
    Partial Private Sub OnUserChanged()
    End Sub
    Partial Private Sub OnOrecidChanging(value As Decimal)
    End Sub
    Partial Private Sub OnOrecidChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Recid", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Recid() As Decimal
		Get
			Return Me._Recid
		End Get
		Set
			If ((Me._Recid = value)  _
						= false) Then
				Me.OnRecidChanging(value)
				Me.SendPropertyChanging
				Me._Recid = value
				Me.SendPropertyChanged("Recid")
				Me.OnRecidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MAid", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property MAid() As String
		Get
			Return Me._MAid
		End Get
		Set
			If (String.Equals(Me._MAid, value) = false) Then
				Me.OnMAidChanging(value)
				Me.SendPropertyChanging
				Me._MAid = value
				Me.SendPropertyChanged("MAid")
				Me.OnMAidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Zipcode", DbType:="NChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property Zipcode() As String
		Get
			Return Me._Zipcode
		End Get
		Set
			If (String.Equals(Me._Zipcode, value) = false) Then
				Me.OnZipcodeChanging(value)
				Me.SendPropertyChanging
				Me._Zipcode = value
				Me.SendPropertyChanged("Zipcode")
				Me.OnZipcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrinterID", DbType:="NVarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property PrinterID() As String
		Get
			Return Me._PrinterID
		End Get
		Set
			If (String.Equals(Me._PrinterID, value) = false) Then
				Me.OnPrinterIDChanging(value)
				Me.SendPropertyChanging
				Me._PrinterID = value
				Me.SendPropertyChanged("PrinterID")
				Me.OnPrinterIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Desc]", Storage:="_Desc", DbType:="NVarChar(50)")>  _
	Public Property Desc() As String
		Get
			Return Me._Desc
		End Get
		Set
			If (String.Equals(Me._Desc, value) = false) Then
				Me.OnDescChanging(value)
				Me.SendPropertyChanging
				Me._Desc = value
				Me.SendPropertyChanged("Desc")
				Me.OnDescChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Chgdate", DbType:="DateTime")>  _
	Public Property Chgdate() As System.Nullable(Of Date)
		Get
			Return Me._Chgdate
		End Get
		Set
			If (Me._Chgdate.Equals(value) = false) Then
				Me.OnChgdateChanging(value)
				Me.SendPropertyChanging
				Me._Chgdate = value
				Me.SendPropertyChanged("Chgdate")
				Me.OnChgdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[User]", Storage:="_User", DbType:="NChar(10)")>  _
	Public Property User() As String
		Get
			Return Me._User
		End Get
		Set
			If (String.Equals(Me._User, value) = false) Then
				Me.OnUserChanging(value)
				Me.SendPropertyChanging
				Me._User = value
				Me.SendPropertyChanged("User")
				Me.OnUserChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Orecid", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Orecid() As Decimal
		Get
			Return Me._Orecid
		End Get
		Set
			If ((Me._Orecid = value)  _
						= false) Then
				Me.OnOrecidChanging(value)
				Me.SendPropertyChanging
				Me._Orecid = value
				Me.SendPropertyChanged("Orecid")
				Me.OnOrecidChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblECMprcntl2")>  _
Partial Public Class tblECMprcntl2
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Recid As Decimal
	
	Private _MAid As String
	
	Private _Zipcode As String
	
	Private _PrinterID As String
	
	Private _Desc As String
	
	Private _Chgdate As System.Nullable(Of Date)
	
	Private _User As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRecidChanging(value As Decimal)
    End Sub
    Partial Private Sub OnRecidChanged()
    End Sub
    Partial Private Sub OnMAidChanging(value As String)
    End Sub
    Partial Private Sub OnMAidChanged()
    End Sub
    Partial Private Sub OnZipcodeChanging(value As String)
    End Sub
    Partial Private Sub OnZipcodeChanged()
    End Sub
    Partial Private Sub OnPrinterIDChanging(value As String)
    End Sub
    Partial Private Sub OnPrinterIDChanged()
    End Sub
    Partial Private Sub OnDescChanging(value As String)
    End Sub
    Partial Private Sub OnDescChanged()
    End Sub
    Partial Private Sub OnChgdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnChgdateChanged()
    End Sub
    Partial Private Sub OnUserChanging(value As String)
    End Sub
    Partial Private Sub OnUserChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Recid", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Recid() As Decimal
		Get
			Return Me._Recid
		End Get
		Set
			If ((Me._Recid = value)  _
						= false) Then
				Me.OnRecidChanging(value)
				Me.SendPropertyChanging
				Me._Recid = value
				Me.SendPropertyChanged("Recid")
				Me.OnRecidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MAid", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property MAid() As String
		Get
			Return Me._MAid
		End Get
		Set
			If (String.Equals(Me._MAid, value) = false) Then
				Me.OnMAidChanging(value)
				Me.SendPropertyChanging
				Me._MAid = value
				Me.SendPropertyChanged("MAid")
				Me.OnMAidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Zipcode", DbType:="NChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property Zipcode() As String
		Get
			Return Me._Zipcode
		End Get
		Set
			If (String.Equals(Me._Zipcode, value) = false) Then
				Me.OnZipcodeChanging(value)
				Me.SendPropertyChanging
				Me._Zipcode = value
				Me.SendPropertyChanged("Zipcode")
				Me.OnZipcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrinterID", DbType:="NVarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property PrinterID() As String
		Get
			Return Me._PrinterID
		End Get
		Set
			If (String.Equals(Me._PrinterID, value) = false) Then
				Me.OnPrinterIDChanging(value)
				Me.SendPropertyChanging
				Me._PrinterID = value
				Me.SendPropertyChanged("PrinterID")
				Me.OnPrinterIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Desc]", Storage:="_Desc", DbType:="NVarChar(50)")>  _
	Public Property Desc() As String
		Get
			Return Me._Desc
		End Get
		Set
			If (String.Equals(Me._Desc, value) = false) Then
				Me.OnDescChanging(value)
				Me.SendPropertyChanging
				Me._Desc = value
				Me.SendPropertyChanged("Desc")
				Me.OnDescChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Chgdate", DbType:="DateTime")>  _
	Public Property Chgdate() As System.Nullable(Of Date)
		Get
			Return Me._Chgdate
		End Get
		Set
			If (Me._Chgdate.Equals(value) = false) Then
				Me.OnChgdateChanging(value)
				Me.SendPropertyChanging
				Me._Chgdate = value
				Me.SendPropertyChanged("Chgdate")
				Me.OnChgdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[User]", Storage:="_User", DbType:="NChar(10)")>  _
	Public Property User() As String
		Get
			Return Me._User
		End Get
		Set
			If (String.Equals(Me._User, value) = false) Then
				Me.OnUserChanging(value)
				Me.SendPropertyChanging
				Me._User = value
				Me.SendPropertyChanged("User")
				Me.OnUserChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblECMecosign")>  _
Partial Public Class tblECMecosign
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Recid As Decimal
	
	Private _TRid As String
	
	Private _TRname As String
	
	Private _Customer As String
	
	Private _Chgdate As System.Nullable(Of Date)
	
	Private _User As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRecidChanging(value As Decimal)
    End Sub
    Partial Private Sub OnRecidChanged()
    End Sub
    Partial Private Sub OnTRidChanging(value As String)
    End Sub
    Partial Private Sub OnTRidChanged()
    End Sub
    Partial Private Sub OnTRnameChanging(value As String)
    End Sub
    Partial Private Sub OnTRnameChanged()
    End Sub
    Partial Private Sub OnCustomerChanging(value As String)
    End Sub
    Partial Private Sub OnCustomerChanged()
    End Sub
    Partial Private Sub OnChgdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnChgdateChanged()
    End Sub
    Partial Private Sub OnUserChanging(value As String)
    End Sub
    Partial Private Sub OnUserChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Recid", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Recid() As Decimal
		Get
			Return Me._Recid
		End Get
		Set
			If ((Me._Recid = value)  _
						= false) Then
				Me.OnRecidChanging(value)
				Me.SendPropertyChanging
				Me._Recid = value
				Me.SendPropertyChanged("Recid")
				Me.OnRecidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRid", DbType:="NChar(7) NOT NULL", CanBeNull:=false)>  _
	Public Property TRid() As String
		Get
			Return Me._TRid
		End Get
		Set
			If (String.Equals(Me._TRid, value) = false) Then
				Me.OnTRidChanging(value)
				Me.SendPropertyChanging
				Me._TRid = value
				Me.SendPropertyChanged("TRid")
				Me.OnTRidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRname", DbType:="NChar(30)")>  _
	Public Property TRname() As String
		Get
			Return Me._TRname
		End Get
		Set
			If (String.Equals(Me._TRname, value) = false) Then
				Me.OnTRnameChanging(value)
				Me.SendPropertyChanging
				Me._TRname = value
				Me.SendPropertyChanged("TRname")
				Me.OnTRnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Customer", DbType:="NChar(7) NOT NULL", CanBeNull:=false)>  _
	Public Property Customer() As String
		Get
			Return Me._Customer
		End Get
		Set
			If (String.Equals(Me._Customer, value) = false) Then
				Me.OnCustomerChanging(value)
				Me.SendPropertyChanging
				Me._Customer = value
				Me.SendPropertyChanged("Customer")
				Me.OnCustomerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Chgdate", DbType:="DateTime")>  _
	Public Property Chgdate() As System.Nullable(Of Date)
		Get
			Return Me._Chgdate
		End Get
		Set
			If (Me._Chgdate.Equals(value) = false) Then
				Me.OnChgdateChanging(value)
				Me.SendPropertyChanging
				Me._Chgdate = value
				Me.SendPropertyChanged("Chgdate")
				Me.OnChgdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[User]", Storage:="_User", DbType:="NChar(10)")>  _
	Public Property User() As String
		Get
			Return Me._User
		End Get
		Set
			If (String.Equals(Me._User, value) = false) Then
				Me.OnUserChanging(value)
				Me.SendPropertyChanging
				Me._User = value
				Me.SendPropertyChanged("User")
				Me.OnUserChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ECMmast_change")>  _
Partial Public Class ECMmast_change
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Recid As Decimal
	
	Private _Type As String
	
	Private _Location As String
	
	Private _Customer As String
	
	Private _MA As String
	
	Private _Recipent As String
	
	Private _Chgdate As System.Nullable(Of Date)
	
	Private _User As String
	
	Private _Trader As String
	
	Private _Pflag As System.Nullable(Of Char)
	
	Private _Orecid As Decimal
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRecidChanging(value As Decimal)
    End Sub
    Partial Private Sub OnRecidChanged()
    End Sub
    Partial Private Sub OnTypeChanging(value As String)
    End Sub
    Partial Private Sub OnTypeChanged()
    End Sub
    Partial Private Sub OnLocationChanging(value As String)
    End Sub
    Partial Private Sub OnLocationChanged()
    End Sub
    Partial Private Sub OnCustomerChanging(value As String)
    End Sub
    Partial Private Sub OnCustomerChanged()
    End Sub
    Partial Private Sub OnMAChanging(value As String)
    End Sub
    Partial Private Sub OnMAChanged()
    End Sub
    Partial Private Sub OnRecipentChanging(value As String)
    End Sub
    Partial Private Sub OnRecipentChanged()
    End Sub
    Partial Private Sub OnChgdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnChgdateChanged()
    End Sub
    Partial Private Sub OnUserChanging(value As String)
    End Sub
    Partial Private Sub OnUserChanged()
    End Sub
    Partial Private Sub OnTraderChanging(value As String)
    End Sub
    Partial Private Sub OnTraderChanged()
    End Sub
    Partial Private Sub OnPflagChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnPflagChanged()
    End Sub
    Partial Private Sub OnOrecidChanging(value As Decimal)
    End Sub
    Partial Private Sub OnOrecidChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Recid", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Recid() As Decimal
		Get
			Return Me._Recid
		End Get
		Set
			If ((Me._Recid = value)  _
						= false) Then
				Me.OnRecidChanging(value)
				Me.SendPropertyChanging
				Me._Recid = value
				Me.SendPropertyChanged("Recid")
				Me.OnRecidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Type", DbType:="NChar(2) NOT NULL", CanBeNull:=false)>  _
	Public Property Type() As String
		Get
			Return Me._Type
		End Get
		Set
			If (String.Equals(Me._Type, value) = false) Then
				Me.OnTypeChanging(value)
				Me.SendPropertyChanging
				Me._Type = value
				Me.SendPropertyChanged("Type")
				Me.OnTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Location", DbType:="NChar(4) NOT NULL", CanBeNull:=false)>  _
	Public Property Location() As String
		Get
			Return Me._Location
		End Get
		Set
			If (String.Equals(Me._Location, value) = false) Then
				Me.OnLocationChanging(value)
				Me.SendPropertyChanging
				Me._Location = value
				Me.SendPropertyChanged("Location")
				Me.OnLocationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Customer", DbType:="NChar(7) NOT NULL", CanBeNull:=false)>  _
	Public Property Customer() As String
		Get
			Return Me._Customer
		End Get
		Set
			If (String.Equals(Me._Customer, value) = false) Then
				Me.OnCustomerChanging(value)
				Me.SendPropertyChanging
				Me._Customer = value
				Me.SendPropertyChanged("Customer")
				Me.OnCustomerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MA", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property MA() As String
		Get
			Return Me._MA
		End Get
		Set
			If (String.Equals(Me._MA, value) = false) Then
				Me.OnMAChanging(value)
				Me.SendPropertyChanging
				Me._MA = value
				Me.SendPropertyChanged("MA")
				Me.OnMAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Recipent", DbType:="NVarChar(128) NOT NULL", CanBeNull:=false)>  _
	Public Property Recipent() As String
		Get
			Return Me._Recipent
		End Get
		Set
			If (String.Equals(Me._Recipent, value) = false) Then
				Me.OnRecipentChanging(value)
				Me.SendPropertyChanging
				Me._Recipent = value
				Me.SendPropertyChanged("Recipent")
				Me.OnRecipentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Chgdate", DbType:="DateTime")>  _
	Public Property Chgdate() As System.Nullable(Of Date)
		Get
			Return Me._Chgdate
		End Get
		Set
			If (Me._Chgdate.Equals(value) = false) Then
				Me.OnChgdateChanging(value)
				Me.SendPropertyChanging
				Me._Chgdate = value
				Me.SendPropertyChanged("Chgdate")
				Me.OnChgdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[User]", Storage:="_User", DbType:="NChar(10)")>  _
	Public Property User() As String
		Get
			Return Me._User
		End Get
		Set
			If (String.Equals(Me._User, value) = false) Then
				Me.OnUserChanging(value)
				Me.SendPropertyChanging
				Me._User = value
				Me.SendPropertyChanged("User")
				Me.OnUserChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Trader", DbType:="NVarChar(30)")>  _
	Public Property Trader() As String
		Get
			Return Me._Trader
		End Get
		Set
			If (String.Equals(Me._Trader, value) = false) Then
				Me.OnTraderChanging(value)
				Me.SendPropertyChanging
				Me._Trader = value
				Me.SendPropertyChanged("Trader")
				Me.OnTraderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pflag", DbType:="NChar(1)")>  _
	Public Property Pflag() As System.Nullable(Of Char)
		Get
			Return Me._Pflag
		End Get
		Set
			If (Me._Pflag.Equals(value) = false) Then
				Me.OnPflagChanging(value)
				Me.SendPropertyChanging
				Me._Pflag = value
				Me.SendPropertyChanged("Pflag")
				Me.OnPflagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Orecid", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Orecid() As Decimal
		Get
			Return Me._Orecid
		End Get
		Set
			If ((Me._Orecid = value)  _
						= false) Then
				Me.OnOrecidChanging(value)
				Me.SendPropertyChanging
				Me._Orecid = value
				Me.SendPropertyChanged("Orecid")
				Me.OnOrecidChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblECMPrinter_Settings")>  _
Partial Public Class tblECMPrinter_Setting
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Recid As Decimal
	
	Private _Printer_Name As String
	
	Private _Postscript_Flag As Boolean
	
	Private _User As String
	
	Private _Chgdate As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRecidChanging(value As Decimal)
    End Sub
    Partial Private Sub OnRecidChanged()
    End Sub
    Partial Private Sub OnPrinter_NameChanging(value As String)
    End Sub
    Partial Private Sub OnPrinter_NameChanged()
    End Sub
    Partial Private Sub OnPostscript_FlagChanging(value As Boolean)
    End Sub
    Partial Private Sub OnPostscript_FlagChanged()
    End Sub
    Partial Private Sub OnUserChanging(value As String)
    End Sub
    Partial Private Sub OnUserChanged()
    End Sub
    Partial Private Sub OnChgdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnChgdateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Recid", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Recid() As Decimal
		Get
			Return Me._Recid
		End Get
		Set
			If ((Me._Recid = value)  _
						= false) Then
				Me.OnRecidChanging(value)
				Me.SendPropertyChanging
				Me._Recid = value
				Me.SendPropertyChanged("Recid")
				Me.OnRecidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Printer_Name", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Printer_Name() As String
		Get
			Return Me._Printer_Name
		End Get
		Set
			If (String.Equals(Me._Printer_Name, value) = false) Then
				Me.OnPrinter_NameChanging(value)
				Me.SendPropertyChanging
				Me._Printer_Name = value
				Me.SendPropertyChanged("Printer_Name")
				Me.OnPrinter_NameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Postscript_Flag", DbType:="Bit NOT NULL")>  _
	Public Property Postscript_Flag() As Boolean
		Get
			Return Me._Postscript_Flag
		End Get
		Set
			If ((Me._Postscript_Flag = value)  _
						= false) Then
				Me.OnPostscript_FlagChanging(value)
				Me.SendPropertyChanging
				Me._Postscript_Flag = value
				Me.SendPropertyChanged("Postscript_Flag")
				Me.OnPostscript_FlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[User]", Storage:="_User", DbType:="Char(10)")>  _
	Public Property User() As String
		Get
			Return Me._User
		End Get
		Set
			If (String.Equals(Me._User, value) = false) Then
				Me.OnUserChanging(value)
				Me.SendPropertyChanging
				Me._User = value
				Me.SendPropertyChanged("User")
				Me.OnUserChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Chgdate", DbType:="DateTime")>  _
	Public Property Chgdate() As System.Nullable(Of Date)
		Get
			Return Me._Chgdate
		End Get
		Set
			If (Me._Chgdate.Equals(value) = false) Then
				Me.OnChgdateChanging(value)
				Me.SendPropertyChanging
				Me._Chgdate = value
				Me.SendPropertyChanged("Chgdate")
				Me.OnChgdateChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblecmCustConf")>  _
Partial Public Class tblecmCustConf
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _location As String
	
	Private _Custid As String
	
	Private _confdate As System.Nullable(Of Date)
	
	Private _user As String
	
	Private _adddate As System.Nullable(Of Date)
	
	Private _RFlag As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnlocationChanging(value As String)
    End Sub
    Partial Private Sub OnlocationChanged()
    End Sub
    Partial Private Sub OnCustidChanging(value As String)
    End Sub
    Partial Private Sub OnCustidChanged()
    End Sub
    Partial Private Sub OnconfdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnconfdateChanged()
    End Sub
    Partial Private Sub OnuserChanging(value As String)
    End Sub
    Partial Private Sub OnuserChanged()
    End Sub
    Partial Private Sub OnadddateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnadddateChanged()
    End Sub
    Partial Private Sub OnRFlagChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnRFlagChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_location", DbType:="NChar(4) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property location() As String
		Get
			Return Me._location
		End Get
		Set
			If (String.Equals(Me._location, value) = false) Then
				Me.OnlocationChanging(value)
				Me.SendPropertyChanging
				Me._location = value
				Me.SendPropertyChanged("location")
				Me.OnlocationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Custid", DbType:="NChar(7) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Custid() As String
		Get
			Return Me._Custid
		End Get
		Set
			If (String.Equals(Me._Custid, value) = false) Then
				Me.OnCustidChanging(value)
				Me.SendPropertyChanging
				Me._Custid = value
				Me.SendPropertyChanged("Custid")
				Me.OnCustidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_confdate", DbType:="DateTime")>  _
	Public Property confdate() As System.Nullable(Of Date)
		Get
			Return Me._confdate
		End Get
		Set
			If (Me._confdate.Equals(value) = false) Then
				Me.OnconfdateChanging(value)
				Me.SendPropertyChanging
				Me._confdate = value
				Me.SendPropertyChanged("confdate")
				Me.OnconfdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[user]", Storage:="_user", DbType:="NChar(10)")>  _
	Public Property user() As String
		Get
			Return Me._user
		End Get
		Set
			If (String.Equals(Me._user, value) = false) Then
				Me.OnuserChanging(value)
				Me.SendPropertyChanging
				Me._user = value
				Me.SendPropertyChanged("user")
				Me.OnuserChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_adddate", DbType:="DateTime")>  _
	Public Property adddate() As System.Nullable(Of Date)
		Get
			Return Me._adddate
		End Get
		Set
			If (Me._adddate.Equals(value) = false) Then
				Me.OnadddateChanging(value)
				Me.SendPropertyChanging
				Me._adddate = value
				Me.SendPropertyChanged("adddate")
				Me.OnadddateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RFlag", DbType:="Bit")>  _
	Public Property RFlag() As System.Nullable(Of Boolean)
		Get
			Return Me._RFlag
		End Get
		Set
			If (Me._RFlag.Equals(value) = false) Then
				Me.OnRFlagChanging(value)
				Me.SendPropertyChanging
				Me._RFlag = value
				Me.SendPropertyChanged("RFlag")
				Me.OnRFlagChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
